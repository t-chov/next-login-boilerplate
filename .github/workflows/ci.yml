name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: Run Biome lint
        run: pnpm lint:biome

      - name: Check Biome formatting
        run: pnpm -w biome check .

      - name: Run type check
        run: pnpm check-types

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gibbon_writer_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:run
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/gibbon_writer_test
          BETTER_AUTH_URL: http://localhost:3000
          BETTER_AUTH_SECRET: test-secret-key-for-ci
          NEXT_PUBLIC_BETTER_AUTH_URL: http://localhost:3000


  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build
        env:
          DATABASE_URL: postgresql://localhost:5432/placeholder
          BETTER_AUTH_URL: http://localhost:3000
          BETTER_AUTH_SECRET: build-placeholder
          NEXT_PUBLIC_BETTER_AUTH_URL: http://localhost:3000
